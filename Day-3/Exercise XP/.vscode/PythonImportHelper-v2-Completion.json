[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "gifs.models",
        "description": "gifs.models",
        "isExtraImport": true,
        "detail": "gifs.models",
        "documentation": {}
    },
    {
        "label": "Gif",
        "importPath": "gifs.models",
        "description": "gifs.models",
        "isExtraImport": true,
        "detail": "gifs.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "gifs",
        "description": "gifs",
        "isExtraImport": true,
        "detail": "gifs",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "gifs.migrations.0001_initial",
        "description": "gifs.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Gif',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=100, null=True)),",
        "detail": "gifs.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "GifsConfig",
        "kind": 6,
        "importPath": "gifs.apps",
        "description": "gifs.apps",
        "peekOfCode": "class GifsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'gifs'",
        "detail": "gifs.apps",
        "documentation": {}
    },
    {
        "label": "GifForm",
        "kind": 6,
        "importPath": "gifs.forms",
        "description": "gifs.forms",
        "peekOfCode": "class GifForm(forms.ModelForm):\n     class Meta:\n        models = Gif\n        fields = ('title', 'url', 'uploader_name', 'categories = forms.ModelMultipleChoiceField(queryset=None)')\nclass CategoryForm(forms.ModelForm):\n    class Meta:\n        models = Category\n        fields = ('name = models.CharField(max_length=100, null=True)',)",
        "detail": "gifs.forms",
        "documentation": {}
    },
    {
        "label": "CategoryForm",
        "kind": 6,
        "importPath": "gifs.forms",
        "description": "gifs.forms",
        "peekOfCode": "class CategoryForm(forms.ModelForm):\n    class Meta:\n        models = Category\n        fields = ('name = models.CharField(max_length=100, null=True)',)",
        "detail": "gifs.forms",
        "documentation": {}
    },
    {
        "label": "Gif",
        "kind": 6,
        "importPath": "gifs.models",
        "description": "gifs.models",
        "peekOfCode": "class Gif(models.Model):\n    title = models.CharField(max_length=100, null=True)\n    url = models.URLField()\n    uploader_name = models.CharField(max_length=120, null=True)\n    created_at = models.DateTimeField()\n    def __str__(self):\n        return self.title\nclass Category(models.Model):\n    name = models.CharField(max_length=100, null=True)\n    gifs = models.ManyToManyField(Gif, related_name='categories', blank=True)",
        "detail": "gifs.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "gifs.models",
        "description": "gifs.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=100, null=True)\n    gifs = models.ManyToManyField(Gif, related_name='categories', blank=True)\n    def __str__(self):\n        return self.name",
        "detail": "gifs.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "gifs.urls",
        "description": "gifs.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.gif, name=\"gif\"),\n    path('gif_method/<int:id>', views.gif_method, name=\"git_method\"),\n    path('category/', views.category, name=\"category\"),\n    path('category_method/<int:id>', views.category_method, name=\"category_method\"),\n    path('AddCategory/', views.AddCategory, name=\"AddCategory\"),\n    path('AddGif-<str:name>/,', views.AddGif, name=\"AddGif\"),\n]",
        "detail": "gifs.urls",
        "documentation": {}
    },
    {
        "label": "gif",
        "kind": 2,
        "importPath": "gifs.views",
        "description": "gifs.views",
        "peekOfCode": "def gif(request):\n    gif_all = Gif.objects.all()\n    return render(request, 'gif/Homepage_view.html', { \"git_all\": gif_all})\ndef gif_method(request, id):\n    gif_meth = Gif.objects.get(id=id)\n    return render(request, 'gif/gif_view.html', {\"gif_meth\": gif_meth})\ndef category(request):\n    categorie = Category.objects.all()\n    return render (request, 'git/category_view.html', {\"categorie\": categorie})\ndef category_method(request, id):",
        "detail": "gifs.views",
        "documentation": {}
    },
    {
        "label": "gif_method",
        "kind": 2,
        "importPath": "gifs.views",
        "description": "gifs.views",
        "peekOfCode": "def gif_method(request, id):\n    gif_meth = Gif.objects.get(id=id)\n    return render(request, 'gif/gif_view.html', {\"gif_meth\": gif_meth})\ndef category(request):\n    categorie = Category.objects.all()\n    return render (request, 'git/category_view.html', {\"categorie\": categorie})\ndef category_method(request, id):\n    cat_meth = Category.objects.get(id=id)\n    return render (request, 'gif/category_list_view.html', {\"cat_meth\": cat_meth})\ndef AddCategory(request, name):",
        "detail": "gifs.views",
        "documentation": {}
    },
    {
        "label": "category",
        "kind": 2,
        "importPath": "gifs.views",
        "description": "gifs.views",
        "peekOfCode": "def category(request):\n    categorie = Category.objects.all()\n    return render (request, 'git/category_view.html', {\"categorie\": categorie})\ndef category_method(request, id):\n    cat_meth = Category.objects.get(id=id)\n    return render (request, 'gif/category_list_view.html', {\"cat_meth\": cat_meth})\ndef AddCategory(request, name):\n    categorie = Category.objects.get(name=name)\n    if request.method == 'POST':\n        form = CategoryForm(request.POST)",
        "detail": "gifs.views",
        "documentation": {}
    },
    {
        "label": "category_method",
        "kind": 2,
        "importPath": "gifs.views",
        "description": "gifs.views",
        "peekOfCode": "def category_method(request, id):\n    cat_meth = Category.objects.get(id=id)\n    return render (request, 'gif/category_list_view.html', {\"cat_meth\": cat_meth})\ndef AddCategory(request, name):\n    categorie = Category.objects.get(name=name)\n    if request.method == 'POST':\n        form = CategoryForm(request.POST)\n        if form.is_valid():\n            form.save()\n            form = CategoryForm()",
        "detail": "gifs.views",
        "documentation": {}
    },
    {
        "label": "AddCategory",
        "kind": 2,
        "importPath": "gifs.views",
        "description": "gifs.views",
        "peekOfCode": "def AddCategory(request, name):\n    categorie = Category.objects.get(name=name)\n    if request.method == 'POST':\n        form = CategoryForm(request.POST)\n        if form.is_valid():\n            form.save()\n            form = CategoryForm()\n    else :\n        form = CategoryForm()\n    context = {",
        "detail": "gifs.views",
        "documentation": {}
    },
    {
        "label": "AddGif",
        "kind": 2,
        "importPath": "gifs.views",
        "description": "gifs.views",
        "peekOfCode": "def AddGif(request, name):\n    gif = Gif.objects.get(name=name)\n    if request.method == 'POST':\n        form = GifForm(request.POST)\n        if form.is_valid():\n            form.save()\n            form = GifForm()\n    else :\n        form = GifForm()\n    context = {",
        "detail": "gifs.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "gifs_proj.asgi",
        "description": "gifs_proj.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "gifs_proj.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-b8czaixh!7+s8l&f*u9-8^lbzb=&q$qywc3##bm9x^$5nn*2c^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-b8czaixh!7+s8l&f*u9-8^lbzb=&q$qywc3##bm9x^$5nn*2c^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'gifs'",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'gifs'\n]\nMIDDLEWARE = [",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'gifs_proj.urls'",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "ROOT_URLCONF = 'gifs_proj.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "WSGI_APPLICATION = 'gifs_proj.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "gifs_proj.settings",
        "description": "gifs_proj.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gifs_proj.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "gifs_proj.urls",
        "description": "gifs_proj.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('gifs.urls'))\n]",
        "detail": "gifs_proj.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "gifs_proj.wsgi",
        "description": "gifs_proj.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "gifs_proj.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gifs_proj.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]