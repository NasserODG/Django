[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "PhoneNumberField",
        "importPath": "phonenumber_field.modelfields",
        "description": "phonenumber_field.modelfields",
        "isExtraImport": true,
        "detail": "phonenumber_field.modelfields",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Faker",
        "importPath": "faker",
        "description": "faker",
        "isExtraImport": true,
        "detail": "faker",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "bike_store.asgi",
        "description": "bike_store.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "bike_store.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-417%%gy^ls%qvy8lv(b0_d#ixy8tdaf8!l_b#z_h72jcp4)3@5'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-417%%gy^ls%qvy8lv(b0_d#ixy8tdaf8!l_b#z_h72jcp4)3@5'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rent'",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rent'\n]\nMIDDLEWARE = [",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'bike_store.urls'",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "ROOT_URLCONF = 'bike_store.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "WSGI_APPLICATION = 'bike_store.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "bike_store.settings",
        "description": "bike_store.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "bike_store.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "bike_store.urls",
        "description": "bike_store.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n]",
        "detail": "bike_store.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "bike_store.wsgi",
        "description": "bike_store.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "bike_store.wsgi",
        "documentation": {}
    },
    {
        "label": "RentConfig",
        "kind": 6,
        "importPath": "rent.apps",
        "description": "rent.apps",
        "peekOfCode": "class RentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'rent'",
        "detail": "rent.apps",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "rent.models",
        "description": "rent.models",
        "peekOfCode": "class Customer(models.Model):\n    first_name = models.CharField(max_length=80)\n    last_name = models.CharField(max_length=150)\n    email = models.EmailField(max_length=253)\n    phone_number = PhoneNumberField()\n    address = models.CharField(max_length=70)\n    city = models.CharField(max_length=60)\n    country = models.CharField(max_length=40)\n    def __str__(self):\n        return self.first_name + ' ' + self.last_name",
        "detail": "rent.models",
        "documentation": {}
    },
    {
        "label": "VehiculeType",
        "kind": 6,
        "importPath": "rent.models",
        "description": "rent.models",
        "peekOfCode": "class VehiculeType(models.Model):\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return self.name    \n# Vehicule size's class  \nclass VehiculeSize(models.Model):\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return self.name\n# Vehicule's class",
        "detail": "rent.models",
        "documentation": {}
    },
    {
        "label": "VehiculeSize",
        "kind": 6,
        "importPath": "rent.models",
        "description": "rent.models",
        "peekOfCode": "class VehiculeSize(models.Model):\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return self.name\n# Vehicule's class\nclass Vehicule(models.Model):\n    vehicule_type = models.ForeignKey(VehiculeType, related_name=\"Type\", on_delete=models.CASCADE)\n    date_created = models.DateTimeField(auto_now_add=True)\n    real_cost = models.FloatField()\n    vehicule_size = models.ForeignKey(VehiculeSize, related_name=\"Size\", on_delete=models.CASCADE)",
        "detail": "rent.models",
        "documentation": {}
    },
    {
        "label": "Vehicule",
        "kind": 6,
        "importPath": "rent.models",
        "description": "rent.models",
        "peekOfCode": "class Vehicule(models.Model):\n    vehicule_type = models.ForeignKey(VehiculeType, related_name=\"Type\", on_delete=models.CASCADE)\n    date_created = models.DateTimeField(auto_now_add=True)\n    real_cost = models.FloatField()\n    vehicule_size = models.ForeignKey(VehiculeSize, related_name=\"Size\", on_delete=models.CASCADE)\n    def __str__(self):\n        return str(self.vehicule_type)    \n# Rental's class\nclass Rental(models.Model):\n    rental_date = models.DateTimeField(auto_now_add=True)",
        "detail": "rent.models",
        "documentation": {}
    },
    {
        "label": "Rental",
        "kind": 6,
        "importPath": "rent.models",
        "description": "rent.models",
        "peekOfCode": "class Rental(models.Model):\n    rental_date = models.DateTimeField(auto_now_add=True)\n    return_date = models.DateTimeField()\n    customer = models.ForeignKey(Customer, related_name=\"customer\", on_delete=models.CASCADE)\n    vehicule = models.ForeignKey(Vehicule, related_name=\"vehicule\", on_delete=models.CASCADE)\n    def __str__(self):\n        return str(self.vehicule)\n    class Meta:\n        ordering = ['rental_date']\n# Rental rate's class",
        "detail": "rent.models",
        "documentation": {}
    },
    {
        "label": "RentalRate",
        "kind": 6,
        "importPath": "rent.models",
        "description": "rent.models",
        "peekOfCode": "class RentalRate(models.Model):\n    dayli_rate = models.FloatField()\n    vehicule_type = models.ForeignKey(VehiculeType, on_delete=models.CASCADE)\n    vehicule_size = models.ForeignKey(VehiculeSize, on_delete=models.CASCADE)\n    def __str__(self):\n        return str(self.vehicule_type)",
        "detail": "rent.models",
        "documentation": {}
    },
    {
        "label": "faker_customer_view",
        "kind": 2,
        "importPath": "rent.views",
        "description": "rent.views",
        "peekOfCode": "def faker_customer_view():\n    fake = Faker()\n    for _ in range(40):\n        customer = Customer (\n            first_name = fake.first_name(),\n            last_name = fake.last_name(),\n            email = fake.email(),\n            phone_number = fake.phone_number(),\n            address = fake.address(),\n            city = fake.city(),",
        "detail": "rent.views",
        "documentation": {}
    },
    {
        "label": "vehiculeList_view",
        "kind": 2,
        "importPath": "rent.views",
        "description": "rent.views",
        "peekOfCode": "def vehiculeList_view(request, id):\n    if id == 0:\n        vehicule = Vehicule.objects.all()\n        page = Paginator(vehicule, 4)    \n        pge = request.GET.get('page')\n        cust = page.get_page(pge)\n        var = 0\n        return render(request, 'rent/vehiculeList.html', {'models': cust, 'len': var})\n    else:\n        vehicule = Vehicule.objects.filter(id=id)",
        "detail": "rent.views",
        "documentation": {}
    },
    {
        "label": "addVehicule_view",
        "kind": 2,
        "importPath": "rent.views",
        "description": "rent.views",
        "peekOfCode": "def addVehicule_view(request):\n        if request.method == 'POST':\n            form = CustomerForm(request.POST)\n            vehicule = Vehicule.objects.all()\n            page = Paginator(vehicule, 4)\n            pge = request.GET.get('page')\n            cust = page.get_page(pge)\n            if form.is_valid():\n                form.save()\n                messages.success(request, \"Vehicule added !\")",
        "detail": "rent.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bike_store.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]